-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.1
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity offload_Loop_distributor_p0_1_proc is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_p0_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    p_p0_ce0 : OUT STD_LOGIC;
    p_p0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_p0_to_offload_s0_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_p0_to_offload_s0_stream_V_full_n : IN STD_LOGIC;
    p_p0_to_offload_s0_stream_V_write : OUT STD_LOGIC );
end;


architecture behav of offload_Loop_distributor_p0_1_proc is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_pp0_stg0_fsm_2 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_st6_fsm_3 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv14_64 : STD_LOGIC_VECTOR (13 downto 0) := "00000001100100";
    constant ap_const_lv7_64 : STD_LOGIC_VECTOR (6 downto 0) := "1100100";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_22 : BOOLEAN;
    signal p_p0_to_offload_s0_stream_V_blk_n : STD_LOGIC;
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal exitcond5_i_i_reg_162 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_i_i_reg_162_pp0_iter1 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_distributor_p0_0_0_i_i_reg_93 : STD_LOGIC_VECTOR (6 downto 0);
    signal next_mul_fu_104_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal next_mul_reg_148 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_60 : BOOLEAN;
    signal exitcond6_i_i_fu_110_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_distributor_p0_1_fu_116_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_distributor_p0_1_reg_157 : STD_LOGIC_VECTOR (6 downto 0);
    signal exitcond5_i_i_fu_126_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp0_stg0_fsm_2 : STD_LOGIC;
    signal ap_sig_72 : BOOLEAN;
    signal ap_sig_76 : BOOLEAN;
    signal p_distributor_p0_0_fu_132_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_268_fu_138_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_268_reg_171 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_distributor_p0_1_0_i_i_reg_70 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_sig_104 : BOOLEAN;
    signal ap_sig_cseq_ST_st6_fsm_3 : STD_LOGIC;
    signal ap_sig_112 : BOOLEAN;
    signal phi_mul_reg_81 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_i_fu_144_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_distributor_p0_0_0_i_i_cast_fu_122_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = exitcond6_i_i_fu_110_p2)))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and ap_sig_76)) and not((ap_const_lv1_0 = exitcond5_i_i_fu_126_p2)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond6_i_i_fu_110_p2))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and ap_sig_76)) and (ap_const_lv1_0 = exitcond5_i_i_fu_126_p2))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond6_i_i_fu_110_p2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and ap_sig_76)) and not((ap_const_lv1_0 = exitcond5_i_i_fu_126_p2))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and ap_sig_76))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond6_i_i_fu_110_p2))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    p_distributor_p0_0_0_i_i_reg_93_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and ap_sig_76)) and (ap_const_lv1_0 = exitcond5_i_i_fu_126_p2))) then 
                p_distributor_p0_0_0_i_i_reg_93 <= p_distributor_p0_0_fu_132_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond6_i_i_fu_110_p2))) then 
                p_distributor_p0_0_0_i_i_reg_93 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    p_distributor_p0_1_0_i_i_reg_70_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_3)) then 
                p_distributor_p0_1_0_i_i_reg_70 <= p_distributor_p0_1_reg_157;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_104))) then 
                p_distributor_p0_1_0_i_i_reg_70 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    phi_mul_reg_81_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_3)) then 
                phi_mul_reg_81 <= next_mul_reg_148;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_104))) then 
                phi_mul_reg_81 <= ap_const_lv14_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and ap_sig_76)))) then
                ap_reg_ppstg_exitcond5_i_i_reg_162_pp0_iter1 <= exitcond5_i_i_reg_162;
                exitcond5_i_i_reg_162 <= exitcond5_i_i_fu_126_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
                next_mul_reg_148 <= next_mul_fu_104_p2;
                p_distributor_p0_1_reg_157 <= p_distributor_p0_1_fu_116_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and ap_sig_76)) and (ap_const_lv1_0 = exitcond5_i_i_fu_126_p2))) then
                p_268_reg_171 <= p_268_fu_138_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_reg_ppiten_pp0_it2, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, exitcond6_i_i_fu_110_p2, exitcond5_i_i_fu_126_p2, ap_sig_76, ap_sig_104)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not(ap_sig_104)) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((ap_const_lv1_0 = exitcond6_i_i_fu_110_p2))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                end if;
            when ap_ST_pp0_stg0_fsm_2 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and ap_sig_76)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and ap_sig_76)) and not((ap_const_lv1_0 = exitcond5_i_i_fu_126_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and ap_sig_76)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and ap_sig_76)) and not((ap_const_lv1_0 = exitcond5_i_i_fu_126_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                    ap_NS_fsm <= ap_ST_st6_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                end if;
            when ap_ST_st6_fsm_3 => 
                ap_NS_fsm <= ap_ST_st2_fsm_1;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;

    ap_done_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_st2_fsm_1, exitcond6_i_i_fu_110_p2)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = exitcond6_i_i_fu_110_p2))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, exitcond6_i_i_fu_110_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = exitcond6_i_i_fu_110_p2)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_104_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_sig_104 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_sig_112_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_112 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_22_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_22 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_60_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_60 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_72_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_72 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_76_assign_proc : process(p_p0_to_offload_s0_stream_V_full_n, ap_reg_ppstg_exitcond5_i_i_reg_162_pp0_iter1)
    begin
                ap_sig_76 <= ((ap_reg_ppstg_exitcond5_i_i_reg_162_pp0_iter1 = ap_const_lv1_0) and (p_p0_to_offload_s0_stream_V_full_n = ap_const_logic_0));
    end process;


    ap_sig_cseq_ST_pp0_stg0_fsm_2_assign_proc : process(ap_sig_72)
    begin
        if (ap_sig_72) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_22)
    begin
        if (ap_sig_22) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_60)
    begin
        if (ap_sig_60) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st6_fsm_3_assign_proc : process(ap_sig_112)
    begin
        if (ap_sig_112) then 
            ap_sig_cseq_ST_st6_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond5_i_i_fu_126_p2 <= "1" when (p_distributor_p0_0_0_i_i_reg_93 = ap_const_lv7_64) else "0";
    exitcond6_i_i_fu_110_p2 <= "1" when (p_distributor_p0_1_0_i_i_reg_70 = ap_const_lv7_64) else "0";
    next_mul_fu_104_p2 <= std_logic_vector(unsigned(phi_mul_reg_81) + unsigned(ap_const_lv14_64));
    p_268_fu_138_p2 <= std_logic_vector(unsigned(phi_mul_reg_81) + unsigned(p_distributor_p0_0_0_i_i_cast_fu_122_p1));
    p_distributor_p0_0_0_i_i_cast_fu_122_p1 <= std_logic_vector(resize(unsigned(p_distributor_p0_0_0_i_i_reg_93),14));
    p_distributor_p0_0_fu_132_p2 <= std_logic_vector(unsigned(p_distributor_p0_0_0_i_i_reg_93) + unsigned(ap_const_lv7_1));
    p_distributor_p0_1_fu_116_p2 <= std_logic_vector(unsigned(p_distributor_p0_1_0_i_i_reg_70) + unsigned(ap_const_lv7_1));
    p_p0_address0 <= tmp_i_fu_144_p1(14 - 1 downto 0);

    p_p0_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_76)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and ap_sig_76)))) then 
            p_p0_ce0 <= ap_const_logic_1;
        else 
            p_p0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_p0_to_offload_s0_stream_V_blk_n_assign_proc : process(p_p0_to_offload_s0_stream_V_full_n, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_exitcond5_i_i_reg_162_pp0_iter1)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_exitcond5_i_i_reg_162_pp0_iter1 = ap_const_lv1_0))) then 
            p_p0_to_offload_s0_stream_V_blk_n <= p_p0_to_offload_s0_stream_V_full_n;
        else 
            p_p0_to_offload_s0_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_p0_to_offload_s0_stream_V_din <= p_p0_q0;

    p_p0_to_offload_s0_stream_V_write_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_exitcond5_i_i_reg_162_pp0_iter1, ap_sig_76)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_exitcond5_i_i_reg_162_pp0_iter1 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and ap_sig_76)))) then 
            p_p0_to_offload_s0_stream_V_write <= ap_const_logic_1;
        else 
            p_p0_to_offload_s0_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_i_fu_144_p1 <= std_logic_vector(resize(unsigned(p_268_reg_171),64));
end behav;
