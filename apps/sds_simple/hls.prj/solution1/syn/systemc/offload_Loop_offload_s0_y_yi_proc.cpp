// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.1
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "offload_Loop_offload_s0_y_yi_proc.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic offload_Loop_offload_s0_y_yi_proc::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic offload_Loop_offload_s0_y_yi_proc::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> offload_Loop_offload_s0_y_yi_proc::ap_ST_st1_fsm_0 = "1";
const sc_lv<4> offload_Loop_offload_s0_y_yi_proc::ap_ST_st2_fsm_1 = "10";
const sc_lv<4> offload_Loop_offload_s0_y_yi_proc::ap_ST_pp0_stg0_fsm_2 = "100";
const sc_lv<4> offload_Loop_offload_s0_y_yi_proc::ap_ST_st5_fsm_3 = "1000";
const sc_lv<32> offload_Loop_offload_s0_y_yi_proc::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> offload_Loop_offload_s0_y_yi_proc::ap_const_lv1_1 = "1";
const sc_lv<32> offload_Loop_offload_s0_y_yi_proc::ap_const_lv32_2 = "10";
const sc_lv<1> offload_Loop_offload_s0_y_yi_proc::ap_const_lv1_0 = "0";
const sc_lv<32> offload_Loop_offload_s0_y_yi_proc::ap_const_lv32_1 = "1";
const sc_lv<32> offload_Loop_offload_s0_y_yi_proc::ap_const_lv32_3 = "11";
const sc_lv<7> offload_Loop_offload_s0_y_yi_proc::ap_const_lv7_0 = "0000000";
const sc_lv<14> offload_Loop_offload_s0_y_yi_proc::ap_const_lv14_0 = "00000000000000";
const sc_lv<14> offload_Loop_offload_s0_y_yi_proc::ap_const_lv14_64 = "1100100";
const sc_lv<7> offload_Loop_offload_s0_y_yi_proc::ap_const_lv7_64 = "1100100";
const sc_lv<7> offload_Loop_offload_s0_y_yi_proc::ap_const_lv7_1 = "1";

offload_Loop_offload_s0_y_yi_proc::offload_Loop_offload_s0_y_yi_proc(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond4_fu_109_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond4_fu_109_p2 );

    SC_METHOD(thread_ap_sig_105);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_sig_22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_46);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_66);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_75);
    sensitive << ( p_p0_to_offload_s0_stream_V_empty_n );
    sensitive << ( exitcond_reg_161 );

    SC_METHOD(thread_ap_sig_99);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg0_fsm_2);
    sensitive << ( ap_sig_46 );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_22 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_66 );

    SC_METHOD(thread_ap_sig_cseq_ST_st5_fsm_3);
    sensitive << ( ap_sig_99 );

    SC_METHOD(thread_exitcond4_fu_109_p2);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( p_offload_s0_y_yi_reg_69 );

    SC_METHOD(thread_exitcond_fu_125_p2);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_2 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( p_offload_s0_x_xi_reg_92 );
    sensitive << ( ap_sig_75 );

    SC_METHOD(thread_next_mul_fu_103_p2);
    sensitive << ( phi_mul_reg_80 );

    SC_METHOD(thread_p_273_fu_137_p2);
    sensitive << ( phi_mul_reg_80 );
    sensitive << ( p_offload_s0_x_xi_cast8_fu_121_p1 );

    SC_METHOD(thread_p_offload_address0);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_2 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( tmp_6_fu_143_p1 );

    SC_METHOD(thread_p_offload_ce0);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_2 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_75 );

    SC_METHOD(thread_p_offload_d0);
    sensitive << ( p_p0_to_offload_s0_stream_V_dout );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_2 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );

    SC_METHOD(thread_p_offload_s0_x_xi_1_fu_131_p2);
    sensitive << ( p_offload_s0_x_xi_reg_92 );

    SC_METHOD(thread_p_offload_s0_x_xi_cast8_fu_121_p1);
    sensitive << ( p_offload_s0_x_xi_reg_92 );

    SC_METHOD(thread_p_offload_s0_y_yi_1_fu_115_p2);
    sensitive << ( p_offload_s0_y_yi_reg_69 );

    SC_METHOD(thread_p_offload_we0);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_2 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( exitcond_reg_161 );
    sensitive << ( ap_sig_75 );

    SC_METHOD(thread_p_p0_to_offload_s0_stream_V_blk_n);
    sensitive << ( p_p0_to_offload_s0_stream_V_empty_n );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_2 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( exitcond_reg_161 );

    SC_METHOD(thread_p_p0_to_offload_s0_stream_V_read);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_2 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( exitcond_reg_161 );
    sensitive << ( ap_sig_75 );

    SC_METHOD(thread_tmp_6_fu_143_p1);
    sensitive << ( p_273_reg_170 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( exitcond4_fu_109_p2 );
    sensitive << ( exitcond_fu_125_p2 );
    sensitive << ( ap_sig_75 );
    sensitive << ( ap_sig_105 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "0001";
    ap_reg_ppiten_pp0_it1 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it0 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "offload_Loop_offload_s0_y_yi_proc_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, p_p0_to_offload_s0_stream_V_dout, "(port)p_p0_to_offload_s0_stream_V_dout");
    sc_trace(mVcdFile, p_p0_to_offload_s0_stream_V_empty_n, "(port)p_p0_to_offload_s0_stream_V_empty_n");
    sc_trace(mVcdFile, p_p0_to_offload_s0_stream_V_read, "(port)p_p0_to_offload_s0_stream_V_read");
    sc_trace(mVcdFile, p_offload_address0, "(port)p_offload_address0");
    sc_trace(mVcdFile, p_offload_ce0, "(port)p_offload_ce0");
    sc_trace(mVcdFile, p_offload_we0, "(port)p_offload_we0");
    sc_trace(mVcdFile, p_offload_d0, "(port)p_offload_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_22, "ap_sig_22");
    sc_trace(mVcdFile, p_p0_to_offload_s0_stream_V_blk_n, "p_p0_to_offload_s0_stream_V_blk_n");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg0_fsm_2, "ap_sig_cseq_ST_pp0_stg0_fsm_2");
    sc_trace(mVcdFile, ap_sig_46, "ap_sig_46");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it1, "ap_reg_ppiten_pp0_it1");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it0, "ap_reg_ppiten_pp0_it0");
    sc_trace(mVcdFile, exitcond_reg_161, "exitcond_reg_161");
    sc_trace(mVcdFile, p_offload_s0_x_xi_reg_92, "p_offload_s0_x_xi_reg_92");
    sc_trace(mVcdFile, next_mul_fu_103_p2, "next_mul_fu_103_p2");
    sc_trace(mVcdFile, next_mul_reg_147, "next_mul_reg_147");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_66, "ap_sig_66");
    sc_trace(mVcdFile, exitcond4_fu_109_p2, "exitcond4_fu_109_p2");
    sc_trace(mVcdFile, p_offload_s0_y_yi_1_fu_115_p2, "p_offload_s0_y_yi_1_fu_115_p2");
    sc_trace(mVcdFile, p_offload_s0_y_yi_1_reg_156, "p_offload_s0_y_yi_1_reg_156");
    sc_trace(mVcdFile, exitcond_fu_125_p2, "exitcond_fu_125_p2");
    sc_trace(mVcdFile, ap_sig_75, "ap_sig_75");
    sc_trace(mVcdFile, p_offload_s0_x_xi_1_fu_131_p2, "p_offload_s0_x_xi_1_fu_131_p2");
    sc_trace(mVcdFile, p_273_fu_137_p2, "p_273_fu_137_p2");
    sc_trace(mVcdFile, p_273_reg_170, "p_273_reg_170");
    sc_trace(mVcdFile, p_offload_s0_y_yi_reg_69, "p_offload_s0_y_yi_reg_69");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st5_fsm_3, "ap_sig_cseq_ST_st5_fsm_3");
    sc_trace(mVcdFile, ap_sig_99, "ap_sig_99");
    sc_trace(mVcdFile, ap_sig_105, "ap_sig_105");
    sc_trace(mVcdFile, phi_mul_reg_80, "phi_mul_reg_80");
    sc_trace(mVcdFile, tmp_6_fu_143_p1, "tmp_6_fu_143_p1");
    sc_trace(mVcdFile, p_offload_s0_x_xi_cast8_fu_121_p1, "p_offload_s0_x_xi_cast8_fu_121_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

offload_Loop_offload_s0_y_yi_proc::~offload_Loop_offload_s0_y_yi_proc() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void offload_Loop_offload_s0_y_yi_proc::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                    !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_109_p2.read()))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_75.read()) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_125_p2.read()))) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_109_p2.read()))) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_75.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_125_p2.read()))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                     esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_109_p2.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_75.read()) && 
                     !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_125_p2.read())))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_75.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_125_p2.read()))) {
        p_offload_s0_x_xi_reg_92 = p_offload_s0_x_xi_1_fu_131_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_109_p2.read()))) {
        p_offload_s0_x_xi_reg_92 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
         !ap_sig_105.read())) {
        p_offload_s0_y_yi_reg_69 = ap_const_lv7_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_3.read())) {
        p_offload_s0_y_yi_reg_69 = p_offload_s0_y_yi_1_reg_156.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
         !ap_sig_105.read())) {
        phi_mul_reg_80 = ap_const_lv14_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_3.read())) {
        phi_mul_reg_80 = next_mul_reg_147.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_75.read()))) {
        exitcond_reg_161 = exitcond_fu_125_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        next_mul_reg_147 = next_mul_fu_103_p2.read();
        p_offload_s0_y_yi_1_reg_156 = p_offload_s0_y_yi_1_fu_115_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_75.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_125_p2.read()))) {
        p_273_reg_170 = p_273_fu_137_p2.read();
    }
}

void offload_Loop_offload_s0_y_yi_proc::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_done_reg.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_109_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void offload_Loop_offload_s0_y_yi_proc::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void offload_Loop_offload_s0_y_yi_proc::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_109_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void offload_Loop_offload_s0_y_yi_proc::thread_ap_sig_105() {
    ap_sig_105 = (esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void offload_Loop_offload_s0_y_yi_proc::thread_ap_sig_22() {
    ap_sig_22 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void offload_Loop_offload_s0_y_yi_proc::thread_ap_sig_46() {
    ap_sig_46 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void offload_Loop_offload_s0_y_yi_proc::thread_ap_sig_66() {
    ap_sig_66 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void offload_Loop_offload_s0_y_yi_proc::thread_ap_sig_75() {
    ap_sig_75 = (esl_seteq<1,1,1>(exitcond_reg_161.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(p_p0_to_offload_s0_stream_V_empty_n.read(), ap_const_logic_0));
}

void offload_Loop_offload_s0_y_yi_proc::thread_ap_sig_99() {
    ap_sig_99 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void offload_Loop_offload_s0_y_yi_proc::thread_ap_sig_cseq_ST_pp0_stg0_fsm_2() {
    if (ap_sig_46.read()) {
        ap_sig_cseq_ST_pp0_stg0_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg0_fsm_2 = ap_const_logic_0;
    }
}

void offload_Loop_offload_s0_y_yi_proc::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_22.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void offload_Loop_offload_s0_y_yi_proc::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_66.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void offload_Loop_offload_s0_y_yi_proc::thread_ap_sig_cseq_ST_st5_fsm_3() {
    if (ap_sig_99.read()) {
        ap_sig_cseq_ST_st5_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st5_fsm_3 = ap_const_logic_0;
    }
}

void offload_Loop_offload_s0_y_yi_proc::thread_exitcond4_fu_109_p2() {
    exitcond4_fu_109_p2 = (!p_offload_s0_y_yi_reg_69.read().is_01() || !ap_const_lv7_64.is_01())? sc_lv<1>(): sc_lv<1>(p_offload_s0_y_yi_reg_69.read() == ap_const_lv7_64);
}

void offload_Loop_offload_s0_y_yi_proc::thread_exitcond_fu_125_p2() {
    exitcond_fu_125_p2 = (!p_offload_s0_x_xi_reg_92.read().is_01() || !ap_const_lv7_64.is_01())? sc_lv<1>(): sc_lv<1>(p_offload_s0_x_xi_reg_92.read() == ap_const_lv7_64);
}

void offload_Loop_offload_s0_y_yi_proc::thread_next_mul_fu_103_p2() {
    next_mul_fu_103_p2 = (!phi_mul_reg_80.read().is_01() || !ap_const_lv14_64.is_01())? sc_lv<14>(): (sc_biguint<14>(phi_mul_reg_80.read()) + sc_biguint<14>(ap_const_lv14_64));
}

void offload_Loop_offload_s0_y_yi_proc::thread_p_273_fu_137_p2() {
    p_273_fu_137_p2 = (!phi_mul_reg_80.read().is_01() || !p_offload_s0_x_xi_cast8_fu_121_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(phi_mul_reg_80.read()) + sc_biguint<14>(p_offload_s0_x_xi_cast8_fu_121_p1.read()));
}

void offload_Loop_offload_s0_y_yi_proc::thread_p_offload_address0() {
    p_offload_address0 =  (sc_lv<14>) (tmp_6_fu_143_p1.read());
}

void offload_Loop_offload_s0_y_yi_proc::thread_p_offload_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_75.read()))) {
        p_offload_ce0 = ap_const_logic_1;
    } else {
        p_offload_ce0 = ap_const_logic_0;
    }
}

void offload_Loop_offload_s0_y_yi_proc::thread_p_offload_d0() {
    p_offload_d0 = p_p0_to_offload_s0_stream_V_dout.read();
}

void offload_Loop_offload_s0_y_yi_proc::thread_p_offload_s0_x_xi_1_fu_131_p2() {
    p_offload_s0_x_xi_1_fu_131_p2 = (!p_offload_s0_x_xi_reg_92.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(p_offload_s0_x_xi_reg_92.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void offload_Loop_offload_s0_y_yi_proc::thread_p_offload_s0_x_xi_cast8_fu_121_p1() {
    p_offload_s0_x_xi_cast8_fu_121_p1 = esl_zext<14,7>(p_offload_s0_x_xi_reg_92.read());
}

void offload_Loop_offload_s0_y_yi_proc::thread_p_offload_s0_y_yi_1_fu_115_p2() {
    p_offload_s0_y_yi_1_fu_115_p2 = (!p_offload_s0_y_yi_reg_69.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(p_offload_s0_y_yi_reg_69.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void offload_Loop_offload_s0_y_yi_proc::thread_p_offload_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
          esl_seteq<1,1,1>(exitcond_reg_161.read(), ap_const_lv1_0) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_75.read())))) {
        p_offload_we0 = ap_const_logic_1;
    } else {
        p_offload_we0 = ap_const_logic_0;
    }
}

void offload_Loop_offload_s0_y_yi_proc::thread_p_p0_to_offload_s0_stream_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         esl_seteq<1,1,1>(exitcond_reg_161.read(), ap_const_lv1_0))) {
        p_p0_to_offload_s0_stream_V_blk_n = p_p0_to_offload_s0_stream_V_empty_n.read();
    } else {
        p_p0_to_offload_s0_stream_V_blk_n = ap_const_logic_1;
    }
}

void offload_Loop_offload_s0_y_yi_proc::thread_p_p0_to_offload_s0_stream_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         esl_seteq<1,1,1>(exitcond_reg_161.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_75.read()))) {
        p_p0_to_offload_s0_stream_V_read = ap_const_logic_1;
    } else {
        p_p0_to_offload_s0_stream_V_read = ap_const_logic_0;
    }
}

void offload_Loop_offload_s0_y_yi_proc::thread_tmp_6_fu_143_p1() {
    tmp_6_fu_143_p1 = esl_zext<64,14>(p_273_reg_170.read());
}

void offload_Loop_offload_s0_y_yi_proc::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!ap_sig_105.read()) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_109_p2.read())) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            }
            break;
        case 4 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_75.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_125_p2.read()))) {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_75.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_125_p2.read()))) {
                ap_NS_fsm = ap_ST_st5_fsm_3;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_st2_fsm_1;
            break;
        default : 
            ap_NS_fsm = "XXXX";
            break;
    }
}

}

