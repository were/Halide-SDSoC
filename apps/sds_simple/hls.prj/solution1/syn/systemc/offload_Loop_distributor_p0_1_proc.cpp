// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.1
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "offload_Loop_distributor_p0_1_proc.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic offload_Loop_distributor_p0_1_proc::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic offload_Loop_distributor_p0_1_proc::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> offload_Loop_distributor_p0_1_proc::ap_ST_st1_fsm_0 = "1";
const sc_lv<4> offload_Loop_distributor_p0_1_proc::ap_ST_st2_fsm_1 = "10";
const sc_lv<4> offload_Loop_distributor_p0_1_proc::ap_ST_pp0_stg0_fsm_2 = "100";
const sc_lv<4> offload_Loop_distributor_p0_1_proc::ap_ST_st6_fsm_3 = "1000";
const sc_lv<32> offload_Loop_distributor_p0_1_proc::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> offload_Loop_distributor_p0_1_proc::ap_const_lv1_1 = "1";
const sc_lv<1> offload_Loop_distributor_p0_1_proc::ap_const_lv1_0 = "0";
const sc_lv<32> offload_Loop_distributor_p0_1_proc::ap_const_lv32_1 = "1";
const sc_lv<32> offload_Loop_distributor_p0_1_proc::ap_const_lv32_2 = "10";
const sc_lv<7> offload_Loop_distributor_p0_1_proc::ap_const_lv7_0 = "0000000";
const sc_lv<32> offload_Loop_distributor_p0_1_proc::ap_const_lv32_3 = "11";
const sc_lv<14> offload_Loop_distributor_p0_1_proc::ap_const_lv14_0 = "00000000000000";
const sc_lv<14> offload_Loop_distributor_p0_1_proc::ap_const_lv14_64 = "1100100";
const sc_lv<7> offload_Loop_distributor_p0_1_proc::ap_const_lv7_64 = "1100100";
const sc_lv<7> offload_Loop_distributor_p0_1_proc::ap_const_lv7_1 = "1";

offload_Loop_distributor_p0_1_proc::offload_Loop_distributor_p0_1_proc(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond6_i_i_fu_110_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond6_i_i_fu_110_p2 );

    SC_METHOD(thread_ap_sig_104);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_sig_112);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_60);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_72);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_76);
    sensitive << ( p_p0_to_offload_s0_stream_V_full_n );
    sensitive << ( ap_reg_ppstg_exitcond5_i_i_reg_162_pp0_iter1 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg0_fsm_2);
    sensitive << ( ap_sig_72 );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_22 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_60 );

    SC_METHOD(thread_ap_sig_cseq_ST_st6_fsm_3);
    sensitive << ( ap_sig_112 );

    SC_METHOD(thread_exitcond5_i_i_fu_126_p2);
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( p_distributor_p0_0_0_i_i_reg_93 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_2 );
    sensitive << ( ap_sig_76 );

    SC_METHOD(thread_exitcond6_i_i_fu_110_p2);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( p_distributor_p0_1_0_i_i_reg_70 );

    SC_METHOD(thread_next_mul_fu_104_p2);
    sensitive << ( phi_mul_reg_81 );

    SC_METHOD(thread_p_268_fu_138_p2);
    sensitive << ( phi_mul_reg_81 );
    sensitive << ( p_distributor_p0_0_0_i_i_cast_fu_122_p1 );

    SC_METHOD(thread_p_distributor_p0_0_0_i_i_cast_fu_122_p1);
    sensitive << ( p_distributor_p0_0_0_i_i_reg_93 );

    SC_METHOD(thread_p_distributor_p0_0_fu_132_p2);
    sensitive << ( p_distributor_p0_0_0_i_i_reg_93 );

    SC_METHOD(thread_p_distributor_p0_1_fu_116_p2);
    sensitive << ( p_distributor_p0_1_0_i_i_reg_70 );

    SC_METHOD(thread_p_p0_address0);
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_2 );
    sensitive << ( tmp_i_fu_144_p1 );

    SC_METHOD(thread_p_p0_ce0);
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_2 );
    sensitive << ( ap_sig_76 );

    SC_METHOD(thread_p_p0_to_offload_s0_stream_V_blk_n);
    sensitive << ( p_p0_to_offload_s0_stream_V_full_n );
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( ap_reg_ppstg_exitcond5_i_i_reg_162_pp0_iter1 );

    SC_METHOD(thread_p_p0_to_offload_s0_stream_V_din);
    sensitive << ( p_p0_q0 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( ap_reg_ppstg_exitcond5_i_i_reg_162_pp0_iter1 );
    sensitive << ( ap_sig_76 );

    SC_METHOD(thread_p_p0_to_offload_s0_stream_V_write);
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( ap_reg_ppstg_exitcond5_i_i_reg_162_pp0_iter1 );
    sensitive << ( ap_sig_76 );

    SC_METHOD(thread_tmp_i_fu_144_p1);
    sensitive << ( p_268_reg_171 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( exitcond6_i_i_fu_110_p2 );
    sensitive << ( exitcond5_i_i_fu_126_p2 );
    sensitive << ( ap_sig_76 );
    sensitive << ( ap_sig_104 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "0001";
    ap_reg_ppiten_pp0_it2 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it0 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "offload_Loop_distributor_p0_1_proc_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, p_p0_address0, "(port)p_p0_address0");
    sc_trace(mVcdFile, p_p0_ce0, "(port)p_p0_ce0");
    sc_trace(mVcdFile, p_p0_q0, "(port)p_p0_q0");
    sc_trace(mVcdFile, p_p0_to_offload_s0_stream_V_din, "(port)p_p0_to_offload_s0_stream_V_din");
    sc_trace(mVcdFile, p_p0_to_offload_s0_stream_V_full_n, "(port)p_p0_to_offload_s0_stream_V_full_n");
    sc_trace(mVcdFile, p_p0_to_offload_s0_stream_V_write, "(port)p_p0_to_offload_s0_stream_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_22, "ap_sig_22");
    sc_trace(mVcdFile, p_p0_to_offload_s0_stream_V_blk_n, "p_p0_to_offload_s0_stream_V_blk_n");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it2, "ap_reg_ppiten_pp0_it2");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it0, "ap_reg_ppiten_pp0_it0");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it1, "ap_reg_ppiten_pp0_it1");
    sc_trace(mVcdFile, exitcond5_i_i_reg_162, "exitcond5_i_i_reg_162");
    sc_trace(mVcdFile, ap_reg_ppstg_exitcond5_i_i_reg_162_pp0_iter1, "ap_reg_ppstg_exitcond5_i_i_reg_162_pp0_iter1");
    sc_trace(mVcdFile, p_distributor_p0_0_0_i_i_reg_93, "p_distributor_p0_0_0_i_i_reg_93");
    sc_trace(mVcdFile, next_mul_fu_104_p2, "next_mul_fu_104_p2");
    sc_trace(mVcdFile, next_mul_reg_148, "next_mul_reg_148");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_60, "ap_sig_60");
    sc_trace(mVcdFile, exitcond6_i_i_fu_110_p2, "exitcond6_i_i_fu_110_p2");
    sc_trace(mVcdFile, p_distributor_p0_1_fu_116_p2, "p_distributor_p0_1_fu_116_p2");
    sc_trace(mVcdFile, p_distributor_p0_1_reg_157, "p_distributor_p0_1_reg_157");
    sc_trace(mVcdFile, exitcond5_i_i_fu_126_p2, "exitcond5_i_i_fu_126_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg0_fsm_2, "ap_sig_cseq_ST_pp0_stg0_fsm_2");
    sc_trace(mVcdFile, ap_sig_72, "ap_sig_72");
    sc_trace(mVcdFile, ap_sig_76, "ap_sig_76");
    sc_trace(mVcdFile, p_distributor_p0_0_fu_132_p2, "p_distributor_p0_0_fu_132_p2");
    sc_trace(mVcdFile, p_268_fu_138_p2, "p_268_fu_138_p2");
    sc_trace(mVcdFile, p_268_reg_171, "p_268_reg_171");
    sc_trace(mVcdFile, p_distributor_p0_1_0_i_i_reg_70, "p_distributor_p0_1_0_i_i_reg_70");
    sc_trace(mVcdFile, ap_sig_104, "ap_sig_104");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st6_fsm_3, "ap_sig_cseq_ST_st6_fsm_3");
    sc_trace(mVcdFile, ap_sig_112, "ap_sig_112");
    sc_trace(mVcdFile, phi_mul_reg_81, "phi_mul_reg_81");
    sc_trace(mVcdFile, tmp_i_fu_144_p1, "tmp_i_fu_144_p1");
    sc_trace(mVcdFile, p_distributor_p0_0_0_i_i_cast_fu_122_p1, "p_distributor_p0_0_0_i_i_cast_fu_122_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

offload_Loop_distributor_p0_1_proc::~offload_Loop_distributor_p0_1_proc() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void offload_Loop_distributor_p0_1_proc::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                    !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond6_i_i_fu_110_p2.read()))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && ap_sig_76.read()) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_i_i_fu_126_p2.read()))) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, exitcond6_i_i_fu_110_p2.read()))) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && ap_sig_76.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_i_i_fu_126_p2.read()))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                     esl_seteq<1,1,1>(ap_const_lv1_0, exitcond6_i_i_fu_110_p2.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && ap_sig_76.read()) && 
                     !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_i_i_fu_126_p2.read())))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it2 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && ap_sig_76.read())) {
            ap_reg_ppiten_pp0_it2 = ap_reg_ppiten_pp0_it1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, exitcond6_i_i_fu_110_p2.read()))) {
            ap_reg_ppiten_pp0_it2 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && ap_sig_76.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_i_i_fu_126_p2.read()))) {
        p_distributor_p0_0_0_i_i_reg_93 = p_distributor_p0_0_fu_132_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond6_i_i_fu_110_p2.read()))) {
        p_distributor_p0_0_0_i_i_reg_93 = ap_const_lv7_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_3.read())) {
        p_distributor_p0_1_0_i_i_reg_70 = p_distributor_p0_1_reg_157.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !ap_sig_104.read())) {
        p_distributor_p0_1_0_i_i_reg_70 = ap_const_lv7_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_3.read())) {
        phi_mul_reg_81 = next_mul_reg_148.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !ap_sig_104.read())) {
        phi_mul_reg_81 = ap_const_lv14_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && ap_sig_76.read()))) {
        ap_reg_ppstg_exitcond5_i_i_reg_162_pp0_iter1 = exitcond5_i_i_reg_162.read();
        exitcond5_i_i_reg_162 = exitcond5_i_i_fu_126_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        next_mul_reg_148 = next_mul_fu_104_p2.read();
        p_distributor_p0_1_reg_157 = p_distributor_p0_1_fu_116_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && ap_sig_76.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_i_i_fu_126_p2.read()))) {
        p_268_reg_171 = p_268_fu_138_p2.read();
    }
}

void offload_Loop_distributor_p0_1_proc::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_done_reg.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond6_i_i_fu_110_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void offload_Loop_distributor_p0_1_proc::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void offload_Loop_distributor_p0_1_proc::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond6_i_i_fu_110_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void offload_Loop_distributor_p0_1_proc::thread_ap_sig_104() {
    ap_sig_104 = (esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void offload_Loop_distributor_p0_1_proc::thread_ap_sig_112() {
    ap_sig_112 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void offload_Loop_distributor_p0_1_proc::thread_ap_sig_22() {
    ap_sig_22 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void offload_Loop_distributor_p0_1_proc::thread_ap_sig_60() {
    ap_sig_60 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void offload_Loop_distributor_p0_1_proc::thread_ap_sig_72() {
    ap_sig_72 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void offload_Loop_distributor_p0_1_proc::thread_ap_sig_76() {
    ap_sig_76 = (esl_seteq<1,1,1>(ap_reg_ppstg_exitcond5_i_i_reg_162_pp0_iter1.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(p_p0_to_offload_s0_stream_V_full_n.read(), ap_const_logic_0));
}

void offload_Loop_distributor_p0_1_proc::thread_ap_sig_cseq_ST_pp0_stg0_fsm_2() {
    if (ap_sig_72.read()) {
        ap_sig_cseq_ST_pp0_stg0_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg0_fsm_2 = ap_const_logic_0;
    }
}

void offload_Loop_distributor_p0_1_proc::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_22.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void offload_Loop_distributor_p0_1_proc::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_60.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void offload_Loop_distributor_p0_1_proc::thread_ap_sig_cseq_ST_st6_fsm_3() {
    if (ap_sig_112.read()) {
        ap_sig_cseq_ST_st6_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st6_fsm_3 = ap_const_logic_0;
    }
}

void offload_Loop_distributor_p0_1_proc::thread_exitcond5_i_i_fu_126_p2() {
    exitcond5_i_i_fu_126_p2 = (!p_distributor_p0_0_0_i_i_reg_93.read().is_01() || !ap_const_lv7_64.is_01())? sc_lv<1>(): sc_lv<1>(p_distributor_p0_0_0_i_i_reg_93.read() == ap_const_lv7_64);
}

void offload_Loop_distributor_p0_1_proc::thread_exitcond6_i_i_fu_110_p2() {
    exitcond6_i_i_fu_110_p2 = (!p_distributor_p0_1_0_i_i_reg_70.read().is_01() || !ap_const_lv7_64.is_01())? sc_lv<1>(): sc_lv<1>(p_distributor_p0_1_0_i_i_reg_70.read() == ap_const_lv7_64);
}

void offload_Loop_distributor_p0_1_proc::thread_next_mul_fu_104_p2() {
    next_mul_fu_104_p2 = (!phi_mul_reg_81.read().is_01() || !ap_const_lv14_64.is_01())? sc_lv<14>(): (sc_biguint<14>(phi_mul_reg_81.read()) + sc_biguint<14>(ap_const_lv14_64));
}

void offload_Loop_distributor_p0_1_proc::thread_p_268_fu_138_p2() {
    p_268_fu_138_p2 = (!phi_mul_reg_81.read().is_01() || !p_distributor_p0_0_0_i_i_cast_fu_122_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(phi_mul_reg_81.read()) + sc_biguint<14>(p_distributor_p0_0_0_i_i_cast_fu_122_p1.read()));
}

void offload_Loop_distributor_p0_1_proc::thread_p_distributor_p0_0_0_i_i_cast_fu_122_p1() {
    p_distributor_p0_0_0_i_i_cast_fu_122_p1 = esl_zext<14,7>(p_distributor_p0_0_0_i_i_reg_93.read());
}

void offload_Loop_distributor_p0_1_proc::thread_p_distributor_p0_0_fu_132_p2() {
    p_distributor_p0_0_fu_132_p2 = (!p_distributor_p0_0_0_i_i_reg_93.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(p_distributor_p0_0_0_i_i_reg_93.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void offload_Loop_distributor_p0_1_proc::thread_p_distributor_p0_1_fu_116_p2() {
    p_distributor_p0_1_fu_116_p2 = (!p_distributor_p0_1_0_i_i_reg_70.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(p_distributor_p0_1_0_i_i_reg_70.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void offload_Loop_distributor_p0_1_proc::thread_p_p0_address0() {
    p_p0_address0 =  (sc_lv<14>) (tmp_i_fu_144_p1.read());
}

void offload_Loop_distributor_p0_1_proc::thread_p_p0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && ap_sig_76.read()))) {
        p_p0_ce0 = ap_const_logic_1;
    } else {
        p_p0_ce0 = ap_const_logic_0;
    }
}

void offload_Loop_distributor_p0_1_proc::thread_p_p0_to_offload_s0_stream_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && 
         esl_seteq<1,1,1>(ap_reg_ppstg_exitcond5_i_i_reg_162_pp0_iter1.read(), ap_const_lv1_0))) {
        p_p0_to_offload_s0_stream_V_blk_n = p_p0_to_offload_s0_stream_V_full_n.read();
    } else {
        p_p0_to_offload_s0_stream_V_blk_n = ap_const_logic_1;
    }
}

void offload_Loop_distributor_p0_1_proc::thread_p_p0_to_offload_s0_stream_V_din() {
    p_p0_to_offload_s0_stream_V_din = p_p0_q0.read();
}

void offload_Loop_distributor_p0_1_proc::thread_p_p0_to_offload_s0_stream_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && 
         esl_seteq<1,1,1>(ap_reg_ppstg_exitcond5_i_i_reg_162_pp0_iter1.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && ap_sig_76.read()))) {
        p_p0_to_offload_s0_stream_V_write = ap_const_logic_1;
    } else {
        p_p0_to_offload_s0_stream_V_write = ap_const_logic_0;
    }
}

void offload_Loop_distributor_p0_1_proc::thread_tmp_i_fu_144_p1() {
    tmp_i_fu_144_p1 = esl_zext<64,14>(p_268_reg_171.read());
}

void offload_Loop_distributor_p0_1_proc::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!ap_sig_104.read()) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond6_i_i_fu_110_p2.read())) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            }
            break;
        case 4 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && ap_sig_76.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && ap_sig_76.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_i_i_fu_126_p2.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())))) {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && 
  !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && ap_sig_76.read()) && 
  !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && ap_sig_76.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_i_i_fu_126_p2.read()) && 
  !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())))) {
                ap_NS_fsm = ap_ST_st6_fsm_3;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_st2_fsm_1;
            break;
        default : 
            ap_NS_fsm = "XXXX";
            break;
    }
}

}

